---
import VanishLink from './VanishLink.astro';
import { clsx } from 'clsx';
const {
  href,
  class: className,
  disabled = false,
  activeClass = 'active',
  disabledClass = 'disabled',
  text,
  parent,
  ...props
} = Astro.props;
export interface Props {
  href: string;
  class?: string;
  text?: string;
  disabled?: boolean;
  activeClass?: string;
  disabledClass?: string;
  children: any;
  parent?: boolean;
}
let active: boolean = href === Astro.url.pathname;
const ariaCurrent = active ? 'page' : undefined;
const activeClassStr: string | undefined = active ? `${activeClass}` : undefined;
const disabledClassStr: string | undefined = disabled ? disabledClass : undefined;
const classCompiled = clsx([activeClassStr, disabledClassStr, className]);

// if parent set, set active if page is child of link
// does not get aria-current
if (parent) {
  if (Astro.url.pathname.includes(href)) {
    active = true;
  }
}
---

<VanishLink
  href={disabled ? undefined : href}
  {/* correct-class={classCompiled} */}
  class={classCompiled}
  aria-current={ariaCurrent}
  {...props}
>
  <slot>{text}</slot>
</VanishLink>
